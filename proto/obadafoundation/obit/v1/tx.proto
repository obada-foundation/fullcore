syntax = "proto3";
package obadafoundation.obit.v1;

import "obadafoundation/obit/v1/nft.proto";
import "gogoproto/gogo.proto";
import "cosmos/msg/v1/msg.proto";
import "cosmos_proto/cosmos.proto";

option go_package = "github.com/obada-foundation/fullcore/x/obit/types";

// Msg defines the Msg service.
service Msg {
  option (cosmos.msg.v1.service) = true;

  // UpdateNFT updates NFT properties (definition will come in future)
  rpc UpdateNFT(MsgUpdateNFT) returns (MsgUpdateNFTResponse);

  // UpdateUriHash updates URI hash for existing NFT
  rpc UpdateUriHash(MsgUpdateUriHash) returns (MsgUpdateUriHashResponse);

  // MintNFT mint a new OBADA NFT (Obit)
  rpc MintNFT(MsgMintNFT) returns (MsgMintNFTResponse);

  // BatchMintNFT mint many NFTs
  rpc BatchMintNFT(MsgBatchMintNFT) returns (MsgBatchMintNFTResponse);

  // TransferNFT send NFT to the new owner address
  rpc TransferNFT(MsgTransferNFT) returns (MsgTransferNFTResponse);

  // BatchTransferNFT transfer a batch NFTs
  rpc BatchTransferNFT(MsgBatchTransferNFT)
      returns (MsgBatchTransferNFTResponse);
}

// MsgMintNFT handles obit information
message MsgMintNFT {
  option (cosmos.msg.v1.signer) = "creator";

  // Bech32 address of creator
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // DID is the unique identification of nft
  string id = 2;

  // Reference to the document
  string uri = 3;

  // uri_hash did document metadata checksum
  string uri_hash = 4;

  // usn is the universal serial number of asset
  string usn = 5;
}

// MsgMintNFTResponse success minting response
message MsgMintNFTResponse {
  // DID
  string id = 1;
}

// MsgBatchMintNFT
message MsgBatchMintNFT {
  option (cosmos.msg.v1.signer) = "creator";

  // Bech32 address of creator
  string creator = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // Collection of NFTs to be minted
  repeated MsgBatchNFT nft = 2 [ (gogoproto.nullable) = false ];
}

// MsgMintNFT handles obit information
message MsgBatchNFT {
  // DID is the unique identification of nft
  string id = 1;

  // Reference to the document
  string uri = 2;

  // DID document metadata checksum
  string uri_hash = 3;

  // usn is the universal serial number of asset
  string usn = 4;
}

// MsgBulkMintNFTResponse success bulk minting response
message MsgBatchMintNFTResponse {}

// MsgTransferNFT represents a message to send a nft from one account to another
// account.
message MsgTransferNFT {
  option (cosmos.msg.v1.signer) = "sender";

  // did defines the unique identification of nft
  string id = 1;

  // sender is the address of the owner of nft
  string sender = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // receiver is the receiver address of nft
  string receiver = 3 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];
}

// MsgTransferNFTResponse defines the Msg/Send response type.
message MsgTransferNFTResponse {}

// MsgBatchTransferNFT
message MsgBatchTransferNFT {
  option (cosmos.msg.v1.signer) = "sender";

  // sender is the address of the owner of nft
  string sender = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // receiver is the receiver address of nft
  string receiver = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // Collection of NFTs to be minted
  repeated string ids = 3 [ (gogoproto.nullable) = false ];
}

// MsgBatchTransferNFTResponse defines the Msg response type.
message MsgBatchTransferNFTResponse {}

// MsgUpdateNFT
message MsgUpdateNFT {
  option (cosmos.msg.v1.signer) = "editor";

  // did defines the unique identification of nft
  string id = 1;

  // editor is the address of the editor of nft metadata
  string editor = 2 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // NFTData represent NFT metadata
  NFTData nft_data = 3;
}

// MsgUpdateNFTResponse
message MsgUpdateNFTResponse {
  // OBADA NFT
  NFT nft = 1;
}

// MsgUpdateUriChecksum
message MsgUpdateUriHash {
  option (cosmos.msg.v1.signer) = "editor";

  // editor is the address of the editor of nft metadata
  string editor = 1 [ (cosmos_proto.scalar) = "cosmos.AddressString" ];

  // id stores DID
  string id = 2;

  // uri_hash did document metadata checksum
  string uri_hash = 3;
}

// MsgUpdateUriHashResponse
message MsgUpdateUriHashResponse {}