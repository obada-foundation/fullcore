syntax = "proto3";
package obadafoundation.fullcore.obit;

import "gogoproto/gogo.proto";
import "google/api/annotations.proto";
import "cosmos/base/query/v1beta1/pagination.proto";
import "obit/params.proto";
import "obit/ta.proto";
import "obit/nft.proto";
// this line is used by starport scaffolding # 1

option go_package = "github.com/obada-foundation/fullcore/x/obit/types";

// Query defines the gRPC querier service.
service Query {
  // Parameters queries the parameters of the module.
  rpc Params(QueryParamsRequest) returns (QueryParamsResponse) {
    option (google.api.http).get = "/obadafoundation/fullcore/params";
  }
  // Queries a Ta by id.
  rpc Ta(QueryGetTaRequest) returns (QueryGetTaResponse) {
    option (google.api.http).get = "/obada-foundation/fullcore/ta/{id}";
  }

  // Queries a list of Ta items.
  rpc TaAll(QueryAllTaRequest) returns (QueryAllTaResponse) {
    option (google.api.http).get = "/obada-foundation/fullcore/ta";
  }

  // GetNftsByAddress returns a list of NFTs ownerd by given address
  rpc GetNftsByAddress(QueryGetNftsByAddressRequest) returns (QueryGetNftsByAddressResponse) {
    option (google.api.http).get = "/obada-foundation/fullcore/nfts/{address}";
  }

  // GetNft returns single NFT by DID
  rpc GetNft(QueryGetNftRequest) returns (NFT) {
    option (google.api.http).get = "/obada-foundation/fullcore/nft/{did}";
  }

// this line is used by starport scaffolding # 2
}

// QueryParamsRequest is request type for the Query/Params RPC method.
message QueryParamsRequest {}

// QueryParamsResponse is response type for the Query/Params RPC method.
message QueryParamsResponse {
  // params holds all the parameters of this module.
  Params params = 1 [(gogoproto.nullable) = false];
}

message QueryGetNftRequest {
  string did = 1;
}

message QueryGetNftsByAddressRequest {
  string address = 1;
}

message QueryGetNftsByAddressResponse {
        repeated NFT NFT = 1 [(gogoproto.nullable) = false];
}

message QueryGetTaRequest {
	uint64 id = 1;
}

message QueryGetTaResponse {
	Ta Ta = 1 [(gogoproto.nullable) = false];
}

message QueryAllTaRequest {
	cosmos.base.query.v1beta1.PageRequest pagination = 1;
}

message QueryAllTaResponse {
	repeated Ta Ta = 1 [(gogoproto.nullable) = false];
	cosmos.base.query.v1beta1.PageResponse pagination = 2;
}

// this line is used by starport scaffolding # 3
